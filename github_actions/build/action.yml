name: Build
description: 'Build library'
inputs:
  root_dir:
    description: 'Root directory'
    required: true
  should_checkout:
    description: 'Checkout the core library?'
    required: true
    default: '1'
  dir:
    description: 'Library directory'
    required: true
    default: 'external_libs/materialsystem'
runs:
  using: "composite"
  steps:
    - name: Initialize Env
      id: init-env
      uses: Silverlan/common_actions/set_common_env_vars@main
      
    - uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
      name: CMake Build
      with:
        if: ${{inputs.should_checkout == '1'}}
        step: |
          uses: Silverlan/common_actions/get_submodule@main
          with:
            repo: 'Silverlan/materialsystem'
            repo_name: 'materialsystem'
            cmake_var: 'DEPENDENCY_MATERIALSYSTEM_INCLUDE'
            dir: 'external_libs'
            include_dir: 'materialsystem/include'
            
    - name: Define CMaterialSystem CMake variables
      uses: Silverlan/common_actions/define_cmake_var@main
      with:
        cmake_var: ' -DDEPENDENCY_CMATERIALSYSTEM_INCLUDE=${{ env.GA_ROOT_DIR }}/external_libs/materialsystem/cmaterialsystem/include'
            
    - name: Define VTFLib CMake variables
      uses: Silverlan/common_actions/define_cmake_var@main
      with:
        cmake_var: ' -DUSE_LIBTXC_DXTN=OFF'
        
    - name: Setup VTFLib Build
      id: setup-vtflib-build
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          echo "::set-output name=build-vtflib-default::0"
        else
          echo "::set-output name=build-vtflib-default::1"
        fi
        echo "::set-output name=runner-os::$RUNNER_OS"
        
    # Get VTFLib (and build on Windows)
    - name: Download submodule - VTFLib
      uses: Silverlan/common_actions/build_submodule@main
      with:
        build_target: 'src/VTFLib13'
        repo: 'https://github.com/Silverlan/VTFLib'
        repo_name: 'VTFLib'
        repo_branch: 'master'
        cmake_var: 'DEPENDENCY_VTFLIB_INCLUDE'
        cmake_var_lib: 'DEPENDENCY_VTFLIB_LIBRARY'
        include_dir: 'src'
        lib_name: 'src/${{ matrix.config.build_type }}/VTFLib13'
        pre_build_cmd: 'cp ${{ env.GA_ROOT_DIR }}/${{ matrix.config.build_dir }}/third_party_libs/VTFLib/src/config.h ${{ env.GA_ROOT_DIR }}/third_party_libs/VTFLib/src/config.h'
        build: '${{ steps.setup-vtflib-build.outputs.build-vtflib-default }}'
            
    # We'll have to build it another way on Linux
    - uses: ChristopherHX/conditional@b4a9649204f81002ec9a4ef7d4bf7d6b2ab7fa55
      with:
        if: ${{steps.setup-vtflib-build.outputs.runner-os == 'Linux'}}
        step: |
          name: Build VTFLib
          shell: bash
          run: |
            cd "${{ env.GA_ROOT_DIR }}/${{ matrix.config.build_dir }}/third_party_libs/VTFLib/"
            ls -R
            make -j`nproc`
            sudo make VTFLib13
            echo "Done!"
            
    - name: Build submodule - util_source2
      uses: Silverlan/util_source2/github_actions/build@master
      with:
        root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/util_source2"
            
    - name: Build submodule - util_udm
      uses: Silverlan/util_udm/github_actions/build@master
      with:
        root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/util_udm"
            
    - name: Build submodule - util_image
      uses: Silverlan/util_image/github_actions/build@master
      with:
        root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/util_image"
            
    - name: Build submodule - datasystem
      uses: Silverlan/datasystem/github_actions/build@master
      with:
        root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/datasystem"

    - uses: Silverlan/common_actions/build_cmake@main
      name: CMake Build
      with:
        build_type: ${{ matrix.config.build_type }}
        build_generator: ${{ matrix.config.generators }}
        cmake_var: 'DEPENDENCY_MATERIALSYSTEM_LIBRARY'
        build_target: materialsystem
        build_dir: '${{ matrix.config.build_dir }}/${{ inputs.dir }}'
        cmake_script_location: '${{ inputs.dir }}'
        
    # CMaterialSystem dependencies
    
    - name: Build submodule - prosper
      uses: Silverlan/prosper/github_actions/build@master
      with:
        root_dir: "${{ env.GA_ROOT_DIR }}/external_libs/prosper"

    - uses: Silverlan/common_actions/build_cmake@main
      name: CMake Build
      with:
        build_type: ${{ matrix.config.build_type }}
        build_generator: ${{ matrix.config.generators }}
        cmake_var: 'DEPENDENCY_CMATERIALSYSTEM_LIBRARY'
        build_target: cmaterialsystem
        build_dir: '${{ matrix.config.build_dir }}/${{ inputs.dir }}'
        cmake_script_location: '${{ inputs.dir }}'
